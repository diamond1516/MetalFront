/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as MainImport } from "./routes/_main"
import { Route as AboutImport } from "./routes/about"
import { Route as BlogIdImport } from "./routes/blog/$id"
import { Route as BlogIndexImport } from "./routes/blog/index"
import { Route as IndexImport } from "./routes/index"
import { Route as LoginImport } from "./routes/login"

// Create/Update Routes

const LoginRoute = LoginImport.update({
    id: "/login",
    path: "/login",
    getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
    id: "/about",
    path: "/about",
    getParentRoute: () => rootRoute,
} as any)

const MainRoute = MainImport.update({
    id: "/_main",
    getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => rootRoute,
} as any)

const BlogIndexRoute = BlogIndexImport.update({
    id: "/blog/",
    path: "/blog/",
    getParentRoute: () => rootRoute,
} as any)

const BlogIdRoute = BlogIdImport.update({
    id: "/blog/$id",
    path: "/blog/$id",
    getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
    interface FileRoutesByPath {
        "/": {
            id: "/"
            path: "/"
            fullPath: "/"
            preLoaderRoute: typeof IndexImport
            parentRoute: typeof rootRoute
        }
        "/_main": {
            id: "/_main"
            path: ""
            fullPath: ""
            preLoaderRoute: typeof MainImport
            parentRoute: typeof rootRoute
        }
        "/about": {
            id: "/about"
            path: "/about"
            fullPath: "/about"
            preLoaderRoute: typeof AboutImport
            parentRoute: typeof rootRoute
        }
        "/login": {
            id: "/login"
            path: "/login"
            fullPath: "/login"
            preLoaderRoute: typeof LoginImport
            parentRoute: typeof rootRoute
        }
        "/blog/$id": {
            id: "/blog/$id"
            path: "/blog/$id"
            fullPath: "/blog/$id"
            preLoaderRoute: typeof BlogIdImport
            parentRoute: typeof rootRoute
        }
        "/blog/": {
            id: "/blog/"
            path: "/blog"
            fullPath: "/blog"
            preLoaderRoute: typeof BlogIndexImport
            parentRoute: typeof rootRoute
        }
    }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
    "/": typeof IndexRoute
    "": typeof MainRoute
    "/about": typeof AboutRoute
    "/login": typeof LoginRoute
    "/blog/$id": typeof BlogIdRoute
    "/blog": typeof BlogIndexRoute
}

export interface FileRoutesByTo {
    "/": typeof IndexRoute
    "": typeof MainRoute
    "/about": typeof AboutRoute
    "/login": typeof LoginRoute
    "/blog/$id": typeof BlogIdRoute
    "/blog": typeof BlogIndexRoute
}

export interface FileRoutesById {
    __root__: typeof rootRoute
    "/": typeof IndexRoute
    "/_main": typeof MainRoute
    "/about": typeof AboutRoute
    "/login": typeof LoginRoute
    "/blog/$id": typeof BlogIdRoute
    "/blog/": typeof BlogIndexRoute
}

export interface FileRouteTypes {
    fileRoutesByFullPath: FileRoutesByFullPath
    fullPaths: "/" | "" | "/about" | "/login" | "/blog/$id" | "/blog"
    fileRoutesByTo: FileRoutesByTo
    to: "/" | "" | "/about" | "/login" | "/blog/$id" | "/blog"
    id:
        | "__root__"
        | "/"
        | "/_main"
        | "/about"
        | "/login"
        | "/blog/$id"
        | "/blog/"
    fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
    IndexRoute: typeof IndexRoute
    MainRoute: typeof MainRoute
    AboutRoute: typeof AboutRoute
    LoginRoute: typeof LoginRoute
    BlogIdRoute: typeof BlogIdRoute
    BlogIndexRoute: typeof BlogIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
    IndexRoute: IndexRoute,
    MainRoute: MainRoute,
    AboutRoute: AboutRoute,
    LoginRoute: LoginRoute,
    BlogIdRoute: BlogIdRoute,
    BlogIndexRoute: BlogIndexRoute,
}

export const routeTree = rootRoute
    ._addFileChildren(rootRouteChildren)
    ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_main",
        "/about",
        "/login",
        "/blog/$id",
        "/blog/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_main": {
      "filePath": "_main.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/blog/$id": {
      "filePath": "blog/$id.tsx"
    },
    "/blog/": {
      "filePath": "blog/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
